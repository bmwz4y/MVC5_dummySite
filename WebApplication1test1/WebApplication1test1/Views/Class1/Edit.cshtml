@model WebApplication1test1.Models.Class1

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Class1</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SomeId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*from lesson 19*@
                @Html.DisplayTextFor(model => model.Name)
                @Html.HiddenFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @*before lesson 19 and to test lesson 20*@
                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Something, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Something", new List<SelectListItem>
                {
                    new SelectListItem {Text = "something1", Value = "s1"}
                    , new SelectListItem {Text = "something2", Value = "s2"}
                    , new SelectListItem {Text = "something3", Value = "s3"}
                }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Something, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "E")
</div>

@*copyright notice using last modified date for each view on it's own*@
@section copyWrite
    {
    @File.GetLastWriteTime(Server.MapPath(VirtualPath)).ToLongDateString()
}